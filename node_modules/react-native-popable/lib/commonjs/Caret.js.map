{"version":3,"sources":["Caret.tsx"],"names":["align","backgroundColor","position","style","styles","container","containerCenter","containerRight","containerPositionTop","containerPositionBottom","containerPositionLeft","containerPositionRight","StyleSheet","create","width","CARET_SIDE_SIZE","height","POPOVER_BACKGROUND_COLOR","transform","rotate","borderRadius","BORDER_RADIUS","marginTop","marginBottom","marginLeft","marginRight","alignSelf"],"mappings":";;;;;;;AAAA;;AACA;;AAEA;;;;eAae,CAAC;AAAEA,EAAAA,KAAF;AAASC,EAAAA,eAAT;AAA0BC,EAAAA,QAA1B;AAAoCC,EAAAA;AAApC,CAAD,KAA6D;AAC1E,sBACE,6BAAC,iBAAD;AACE,IAAA,KAAK,EAAE,CACLC,MAAM,CAACC,SADF,EAELL,KAAK,KAAK,QAAV,IAAsBI,MAAM,CAACE,eAFxB,EAGLN,KAAK,KAAK,OAAV,IAAqBI,MAAM,CAACG,cAHvB,EAIL,CAAC,CAACN,eAAF,IAAqB;AAAEA,MAAAA;AAAF,KAJhB,EAKLC,QAAQ,KAAK,KAAb,IAAsBE,MAAM,CAACI,oBALxB,EAMLN,QAAQ,KAAK,QAAb,IAAyBE,MAAM,CAACK,uBAN3B,EAOLP,QAAQ,KAAK,MAAb,IAAuBE,MAAM,CAACM,qBAPzB,EAQLR,QAAQ,KAAK,OAAb,IAAwBE,MAAM,CAACO,sBAR1B,EASLR,KATK;AADT,IADF;AAeD,C;;;;AAED,MAAMC,MAAM,GAAGQ,wBAAWC,MAAX,CAAkB;AAC/BR,EAAAA,SAAS,EAAE;AACTS,IAAAA,KAAK,EAAEC,2BADE;AAETC,IAAAA,MAAM,EAAED,2BAFC;AAGTd,IAAAA,eAAe,EAAEgB,oCAHR;AAITC,IAAAA,SAAS,EAAE,CAAC;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAAD,CAJF;AAKTC,IAAAA,YAAY,EAAEC;AALL,GADoB;AAQ/Bb,EAAAA,oBAAoB,EAAE;AACpBc,IAAAA,SAAS,EAAE,CAACP,8BAAkB,CAAlB,GAAsBM,4BAAgB,CAAvC,IAA4C,CAAC,CADpC;AAEpBE,IAAAA,YAAY,EAAER,8BAAkB,CAAlB,GAAsBM,4BAAgB;AAFhC,GARS;AAY/BZ,EAAAA,uBAAuB,EAAE;AACvBc,IAAAA,YAAY,EAAE,CAACR,8BAAkB,CAAlB,GAAsBM,4BAAgB,CAAvC,IAA4C,CAAC,CADpC;AAEvBC,IAAAA,SAAS,EAAEP,8BAAkB,CAAlB,GAAsBM,4BAAgB;AAF1B,GAZM;AAgB/BX,EAAAA,qBAAqB,EAAE;AACrBc,IAAAA,UAAU,EAAE,CAACT,8BAAkB,CAAlB,GAAsBM,4BAAgB,CAAvC,IAA4C,CAAC,CADpC;AAErBI,IAAAA,WAAW,EAAEV,8BAAkB,CAAlB,GAAsBM,4BAAgB;AAF9B,GAhBQ;AAoB/BV,EAAAA,sBAAsB,EAAE;AACtBc,IAAAA,WAAW,EAAE,CAACV,8BAAkB,CAAlB,GAAsBM,4BAAgB,CAAvC,IAA4C,CAAC,CADpC;AAEtBG,IAAAA,UAAU,EAAET,8BAAkB,CAAlB,GAAsBM,4BAAgB;AAF5B,GApBO;AAwB/Bf,EAAAA,eAAe,EAAE;AACfoB,IAAAA,SAAS,EAAE;AADI,GAxBc;AA2B/BnB,EAAAA,cAAc,EAAE;AACdmB,IAAAA,SAAS,EAAE;AADG;AA3Be,CAAlB,CAAf","sourcesContent":["import React from 'react';\nimport { StyleSheet, View, ViewProps } from 'react-native';\nimport type { PopoverProps } from './Popover';\nimport {\n  POPOVER_BACKGROUND_COLOR,\n  BORDER_RADIUS,\n  CARET_SIDE_SIZE,\n} from './style-guide';\n\nexport type CaretProps = {\n  backgroundColor?: string;\n  align: 'left' | 'center' | 'right';\n  position: PopoverProps['position'];\n  style?: ViewProps['style'];\n};\n\nexport default ({ align, backgroundColor, position, style }: CaretProps) => {\n  return (\n    <View\n      style={[\n        styles.container,\n        align === 'center' && styles.containerCenter,\n        align === 'right' && styles.containerRight,\n        !!backgroundColor && { backgroundColor },\n        position === 'top' && styles.containerPositionTop,\n        position === 'bottom' && styles.containerPositionBottom,\n        position === 'left' && styles.containerPositionLeft,\n        position === 'right' && styles.containerPositionRight,\n        style,\n      ]}\n    />\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    width: CARET_SIDE_SIZE,\n    height: CARET_SIDE_SIZE,\n    backgroundColor: POPOVER_BACKGROUND_COLOR,\n    transform: [{ rotate: '45deg' }],\n    borderRadius: BORDER_RADIUS,\n  },\n  containerPositionTop: {\n    marginTop: (CARET_SIDE_SIZE / 2 + BORDER_RADIUS / 2) * -1,\n    marginBottom: CARET_SIDE_SIZE / 2 + BORDER_RADIUS / 2,\n  },\n  containerPositionBottom: {\n    marginBottom: (CARET_SIDE_SIZE / 2 + BORDER_RADIUS / 2) * -1,\n    marginTop: CARET_SIDE_SIZE / 2 + BORDER_RADIUS / 2,\n  },\n  containerPositionLeft: {\n    marginLeft: (CARET_SIDE_SIZE / 2 + BORDER_RADIUS / 2) * -1,\n    marginRight: CARET_SIDE_SIZE / 2 + BORDER_RADIUS / 2,\n  },\n  containerPositionRight: {\n    marginRight: (CARET_SIDE_SIZE / 2 + BORDER_RADIUS / 2) * -1,\n    marginLeft: CARET_SIDE_SIZE / 2 + BORDER_RADIUS / 2,\n  },\n  containerCenter: {\n    alignSelf: 'center',\n  },\n  containerRight: {\n    alignSelf: 'flex-end',\n  },\n});\n"]}