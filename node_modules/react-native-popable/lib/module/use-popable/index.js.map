{"version":3,"sources":["index.ts"],"names":["useMemo","useRef","usePopable","ref","handlers","show","current","hide","result"],"mappings":"AAAA,SAAoBA,OAApB,EAA6BC,MAA7B,QAA2C,OAA3C;;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASC,UAAT,GAAkC;AAC/C,QAAMC,GAAG,GAAGF,MAAM,CAAiB,IAAjB,CAAlB;AAEA,QAAMG,QAAQ,GAAGJ,OAAO,CACtB,OAAO;AACLK,IAAAA,IAAI,EAAE;AAAA;;AAAA,6BAAMF,GAAG,CAACG,OAAV,iDAAM,aAAaD,IAAb,EAAN;AAAA,KADD;AAELE,IAAAA,IAAI,EAAE;AAAA;;AAAA,8BAAMJ,GAAG,CAACG,OAAV,kDAAM,cAAaC,IAAb,EAAN;AAAA;AAFD,GAAP,CADsB,EAKtB,EALsB,CAAxB;AAQA,QAAMC,MAAM,GAAI,CAACL,GAAD,EAAMC,QAAN,CAAhB;AACAI,EAAAA,MAAM,CAACH,IAAP,GAAcD,QAAQ,CAACC,IAAvB;AACAG,EAAAA,MAAM,CAACD,IAAP,GAAcH,QAAQ,CAACG,IAAvB;AACAC,EAAAA,MAAM,CAACL,GAAP,GAAaA,GAAb;AAEA,SAAOK,MAAP;AACD","sourcesContent":["import { RefObject, useMemo, useRef } from 'react';\nimport type { PopableManager } from './types';\n\ntype Ref = RefObject<PopableManager>;\n\ntype UsePopableArray = [Ref, PopableManager];\n\ntype UsePopableObject = {\n  ref: Ref;\n} & PopableManager;\n\ntype UsePopable = UsePopableObject & UsePopableArray;\n\n/**\n * Imperatively manage the popover.\n *\n * ```jsx\n * const [ref, { show, hide }] = usePopable()\n *\n * return <Popable ref={ref} />\n * ```\n *\n * If you prefer, you can destructure as an object:\n *\n * ```js\n * const { ref, show, hide } = usePopable()\n * ```\n */\nexport default function usePopable(): UsePopable {\n  const ref = useRef<PopableManager>(null);\n\n  const handlers = useMemo(\n    () => ({\n      show: () => ref.current?.show(),\n      hide: () => ref.current?.hide(),\n    }),\n    []\n  );\n\n  const result = ([ref, handlers] as unknown) as UsePopable;\n  result.show = handlers.show;\n  result.hide = handlers.hide;\n  result.ref = ref;\n\n  return result;\n}\n"]}