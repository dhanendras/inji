import React, { useEffect, useState } from 'react';
import { Modal, Pressable, StyleSheet } from 'react-native';
import { ANIMATION_DURATION } from '../constants';
// On iOS, Modal orientations need to be manually specified
const IOS_MODAL_SUPPORTED_ORIENTATIONS = ['portrait', 'portrait-upside-down', 'landscape', 'landscape-left', 'landscape-right'];
export default function Backdrop({
  children,
  onPress,
  visible
}) {
  const [delayedVisible, setDelayedVisible] = useState(visible);
  useEffect(() => {
    // When `Modal.visible` changes, the inner view gets hidden
    // immediately. This gives no time to `Popover` to animate
    // when `visible` becomes `false`. By delaying the `visible`
    // property, it gives extra time for the popover to animate,
    // then hide the modal
    if (visible) {
      setDelayedVisible(true);
    } else {
      setTimeout(() => setDelayedVisible(false), ANIMATION_DURATION);
    }
  }, [visible]);
  return /*#__PURE__*/React.createElement(Modal, {
    visible: delayedVisible,
    onRequestClose: onPress,
    hardwareAccelerated: true,
    transparent: true,
    supportedOrientations: IOS_MODAL_SUPPORTED_ORIENTATIONS
  }, /*#__PURE__*/React.createElement(Pressable, {
    onPress: onPress,
    style: styles.pressable
  }, children));
}
const styles = StyleSheet.create({
  pressable: {
    flex: 1
  }
});
//# sourceMappingURL=Backdrop.js.map